// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	model "upserv/src/storage/model"

	mock "github.com/stretchr/testify/mock"
)

// IHelloWorld is an autogenerated mock type for the IHelloWorld type
type IHelloWorld struct {
	mock.Mock
}

// Find provides a mock function with given fields: ctx
func (_m *IHelloWorld) Find(ctx context.Context) (*model.HelloWorld, error) {
	ret := _m.Called(ctx)

	var r0 *model.HelloWorld
	if rf, ok := ret.Get(0).(func(context.Context) *model.HelloWorld); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.HelloWorld)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIHelloWorld interface {
	mock.TestingT
	Cleanup(func())
}

// NewIHelloWorld creates a new instance of IHelloWorld. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIHelloWorld(t mockConstructorTestingTNewIHelloWorld) *IHelloWorld {
	mock := &IHelloWorld{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
